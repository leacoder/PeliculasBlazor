@page "/uploaddata"
@using System.Net.Http.Headers
@using static System.Net.WebRequestMethods
@inject ILogger<UploadDataComponent> Logger
@using System.Linq
@using Microsoft.Extensions.Logging
@inject HttpClient Http

<h3>Upload Files</h3>

<p>
    <label>
        Max file size:
        <input type="number" @bind="maxFileSize" />
    </label>
</p>

<p>
    <label>
        Max allowed files:
        <input type="number" @bind="maxAllowedFiles" />
    </label>
</p>

<p>
    <label>
        Upload up to @maxAllowedFiles of up to @maxFileSize bytes:
        <InputFile OnChange="@LoadFiles"  onselect="@LoadFiles" />
    </label>
</p>B
@*<button @onClick="@SubmitFiles">Submit</button>*@

@if (isLoading)
{
    <p>Uploading...</p>
}
else
{
    <ul>
        @foreach (var file in loadedFiles)
        {
            <li>
                <ul>
                    <li>Name: @file.Name</li>
                    <li>Last modified: @file.LastModified.ToString()</li>
                    <li>Size (bytes): @file.Size</li>
                    <li>Content type: @file.ContentType</li>
                </ul>
            </li>
        }
    </ul>
}

@code {
    private List<IBrowserFile> loadedFiles = new();
    //private List<File> files = new();
    private List<UploadResult> uploadResults = new();
    private long maxFileSize = 1024 * 1000000;
    private int maxAllowedFiles = 3;
    private bool isLoading;
    //private bool shouldRender= true;
    bool upload = false;

    private void LoadFiles(InputFileChangeEventArgs files)
    {
        isLoading = true;
        loadedFiles.Clear();

        foreach (var file in files.GetMultipleFiles(maxAllowedFiles))
        {
            try
            {
                loadedFiles.Add(file);
            }
            catch (Exception ex)
            {
                Logger.LogError("File: {Filename} Error: {Error}", 
                    file.Name, ex.Message);
            }
        }

        isLoading = false;
    }
}